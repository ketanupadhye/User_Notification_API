
//Service


import { Injectable, NotFoundException } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { UserPreference, UserPreferenceDocument } from '../schemas/user-preference.schema';
import { CreateUserPreferenceDto } from '../dto/create-user-preference.dto';

@Injectable()
export class UserPreferenceService {
  constructor(
    @InjectModel(UserPreference.name) private userPreferenceModel: Model<UserPreferenceDocument>,
  ) {}

  async create(createUserPreferenceDto: CreateUserPreferenceDto): Promise<UserPreference> {
    return this.userPreferenceModel.create(createUserPreferenceDto);
  }

  async findOne(userId: string): Promise<UserPreference> {
    const userPreference = await this.userPreferenceModel.findOne({ userId });
    if (!userPreference) {
      throw new NotFoundException('User preference not found');
    }
    return userPreference;
  }

  async update(userId: string, updateData: Partial<CreateUserPreferenceDto>): Promise<UserPreference> {
    const updatedPreference = await this.userPreferenceModel.findOneAndUpdate(
      { userId },
      updateData,
      { new: true },
    );
    if (!updatedPreference) {
      throw new NotFoundException('User preference not found');
    }
    return updatedPreference;
  }

  async delete(userId: string): Promise<void> {
    const result = await this.userPreferenceModel.deleteOne({ userId });
    if (result.deletedCount === 0) {
      throw new NotFoundException('User preference not found');
    }
  }
}
